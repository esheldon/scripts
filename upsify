#!/usr/bin/env python

import os


def get_args():
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument('-d', '--dir',
                        help='python package directory',
                        required=True)
    parser.add_argument('-n', '--package-name',
                        help=('optional python package name, '
                              'defaults to directory basename'))

    parser.add_argument('-s', '--subdir',
                        help='optional subdirectory to use, e.g. "python"')
    parser.add_argument('-b', '--bindir',
                        help=('optional path for executables, relative '
                              'to the package directory, e.g. "bin"'))
    return parser.parse_args()


def main():
    args = get_args()

    ups_dir = os.path.join(args.dir, 'ups')
    if not os.path.exists(ups_dir):
        os.makedirs(ups_dir)

    package_name = args.package_name
    if package_name is None:
        adir = os.path.abspath(args.dir)
        package_name = os.path.basename(adir)

    ups_file = os.path.join(ups_dir, f'{package_name}.table')
    if os.path.exists(ups_file):
        raise RuntimeError(f'ups table file already exists: {ups_file}')

    if args.subdir is not None:
        subdir = args.subdir
    else:
        subdir = ""

    with open(ups_file, 'w') as fobj:
        text = ['envPrepend(PYTHONPATH, ${PRODUCT_DIR}/%s)' % subdir]
        if args.bindir is not None:
            text += ['envPrepend(PATH, ${PRODUCT_DIR}/%s)' % args.bindir]

        text += ['']
        text = '\n'.join(text)
        fobj.write(text)


if __name__ == '__main__':
    main()
